version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: domain-manager-db
    environment:
      POSTGRES_DB: domain_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - domain-manager-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: domain-manager-redis
    ports:
      - "6379:6379"
    networks:
      - domain-manager-network

  # Domain Manager Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: domain-manager-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: domain_manager
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      TWILIO_ACCOUNT_SID: your-twilio-account-sid
      TWILIO_AUTH_TOKEN: your-twilio-auth-token
      TWILIO_PHONE_NUMBER: your-twilio-phone-number
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - domain-manager-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: domain-manager-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - domain-manager-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  domain-manager-network:
    driver: bridge 